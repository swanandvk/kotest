(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{133:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return O})),n.d(t,"metadata",(function(){return f})),n.d(t,"rightToc",(function(){return v})),n.d(t,"default",(function(){return h}));var a=n(3),r=n(7),o=n(0),s=n.n(o),i=n(134),l=n(145),c=n(136),b=n(96),u=n.n(b),p=37,d=39;var m=function(e){var t=e.lazy,n=e.block,a=e.children,r=e.defaultValue,i=e.values,b=e.groupId,m=e.className,j=Object(l.a)(),O=j.tabGroupChoices,f=j.setTabGroupChoices,v=Object(o.useState)(r),g=v[0],h=v[1];if(null!=b){var y=O[b];null!=y&&y!==g&&i.some((function(e){return e.value===y}))&&h(y)}var k=function(e){h(e),null!=b&&f(b,e)},N=[];return s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},i.map((function(e){var t=e.value,n=e.label;return s.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(c.a)("tabs__item",u.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case d:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case p:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return k(t)},onClick:function(){k(t)}},n)}))),t?Object(o.cloneElement)(a.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):s.a.createElement("div",{className:"margin-vert--md"},a.map((function(e,t){return Object(o.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))};var j=function(e){var t=e.children,n=e.hidden,r=e.className;return s.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)},O={id:"quickstart",title:"Quick Start",sidebar_label:"Quick Start"},f={unversionedId:"quickstart",id:"quickstart",isDocsHomePage:!1,title:"Quick Start",description:"Kotest is divided into several, stand alone, subprojects, each of which can be used independently:",source:"@site/docs/quick_start.mdx",slug:"/quickstart",permalink:"/docs/quickstart",editUrl:"https://github.com/kotest/kotest/docs/quick_start.mdx",version:"current",sidebar_label:"Quick Start",sidebar:"docs",next:{title:"Changelog",permalink:"/docs/changelog.html"}},v=[{value:"Test Framework",id:"test-framework",children:[]},{value:"Assertions Library",id:"assertions-library",children:[]},{value:"Property Testing",id:"property-testing",children:[]},{value:"Snapshots",id:"snapshots",children:[]}],g={rightToc:v};function h(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},g,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Kotest is divided into several, stand alone, subprojects, each of which can be used independently:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/framework/framework.html"}),"Test framework")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/assertions/assertions.html"}),"Assertions library")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/proptest/property-based-testing.html"}),"Property testing"))),Object(i.b)("p",null,"You can decide to go ",Object(i.b)("em",{parentName:"p"},"all in")," on Kotest, and use all three together, or you can choose to one or more modules in conjuction with other projects.\nFor example, you could use the assertions library with JUnit, or you coulse use the test framework with another assertions library."),Object(i.b)("p",null,"This page gives setup instructions for various combinations of projects and targets."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Kotest is a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://kotlinlang.org/docs/reference/multiplatform.html"}),"multi-platform project"),".\nIf you are unfamilar with this, then Kotlin compiles to different targets - JVM, JS, Native, iOS and so on. If you are doing server side or android development then you want the modules that end with JVM, such as ",Object(i.b)("inlineCode",{parentName:"p"},"kotest-property-jvm"),"."))),Object(i.b)("h2",{id:"test-framework"},"Test Framework"),Object(i.b)("p",null,"The Kotest test framework is supported on JVM, Android and Javascript."),Object(i.b)(m,{defaultValue:"JVM/Gradle",values:[{label:"JVM/Gradle",value:"JVM/Gradle"},{label:"JVM/Maven",value:"JVM/Maven"},{label:"Kotlin/JS",value:"JS"},{label:"Android",value:"Android"},{label:"Multiplatform",value:"Multiplatform"}],mdxType:"Tabs"},Object(i.b)(j,{value:"JVM/Gradle",mdxType:"TabItem"},Object(i.b)("p",null,"Kotest on the JVM uses the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle"}),"JUnit Platform")," gradle plugin.\nFor Gradle 4.6 and higher this is as simple as adding ",Object(i.b)("inlineCode",{parentName:"p"},"useJUnitPlatform()")," inside the tasks with type ",Object(i.b)("inlineCode",{parentName:"p"},"Test")," and then adding the Kotest junit5 runner dependency."),Object(i.b)("p",null,"If you are using Gradle + Groovy then:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"test {\n   useJUnitPlatform()\n}\n")),Object(i.b)("p",null,"Or if you are using Gradle + Kotlin then:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),"tasks.withType<Test> {\n   useJUnitPlatform()\n}\n")),Object(i.b)("p",null,"And then the dependency:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"testImplementation 'io.kotest:kotest-runner-junit5:$version'\n"))),Object(i.b)(j,{value:"JS",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your commonTest dependencies block:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"implementation 'io.kotest:kotest-framework-engine:$version'\n")),Object(i.b)("p",null,"Alternatively, add the dependency to the Javascript specific target."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),'kotlin {\n   targets {\n      js {\n         browser()\n         nodejs()\n      }\n   }\n   sourceSets {\n      val jsTest by getting {\n         dependencies {\n            implementation("io.kotest:kotest-framework-engine:$version")\n         }\n      }\n   }\n}\n'))),Object(i.b)(j,{value:"JVM/Maven",mdxType:"TabItem"},Object(i.b)("p",null,"For maven you must configure the surefire plugin for junit tests."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<plugin>\n   <groupId>org.apache.maven.plugins</groupId>\n   <artifactId>maven-surefire-plugin</artifactId>\n   <version>2.22.2</version>\n</plugin>\n")),Object(i.b)("p",null,"And then add the Kotest JUnit5 runner to your dependencies section."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<dependency>\n   <groupId>io.kotest</groupId>\n   <artifactId>kotest-runner-junit5-jvm</artifactId>\n   <version>{version}</version>\n   <scope>test</scope>\n</dependency>\n"))),Object(i.b)(j,{value:"Android",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Currently, only JVM tests are officially supported in Kotest. Experimental support for instrumented and Robolectric tests is currently under work."),Object(i.b)("p",{parentName:"div"},"The following steps enable Kotest to be used for unit and integration tests, where the Android framework is not needed or is mocked that usually reside in the\n",Object(i.b)("inlineCode",{parentName:"p"},"src/test")," folder of your module."))),Object(i.b)("p",null,"Kotest on Android uses the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle"}),"JUnit Platform")," gradle plugin.\nThis requires configuring the android test options block in your build file and then adding the Kotest junit5 runner dependency."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),"android.testOptions {\n   unitTests.all {\n      useJUnitPlatform()\n   }\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"dependencies {\n   testImplementation 'io.kotest:kotest-runner-junit5:version'\n}\n"))),Object(i.b)(j,{value:"Multiplatform",mdxType:"TabItem"},Object(i.b)("p",null,"To configure the test framework for both JS and JVM, you just combine copy the steps for JVM and JS."))),Object(i.b)("h2",{id:"assertions-library"},"Assertions Library"),Object(i.b)("p",null,"The core assertions library framework is supported on all targets. Submodules are supported on the platforms that applicable.\nFor example, the JDBC matchers only work for JVM since JDBC is a Java library."),Object(i.b)(m,{defaultValue:"JVM/Gradle",values:[{label:"JVM/Gradle",value:"JVM/Gradle"},{label:"JVM/Maven",value:"JVM/Maven"},{label:"Multiplatform",value:"Multiplatform"}],mdxType:"Tabs"},Object(i.b)(j,{value:"JVM/Gradle",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your build:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"testImplementation 'io.kotest:kotest-assertions-core:$version'\n"))),Object(i.b)(j,{value:"JVM/Maven",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your build."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<dependency>\n   <groupId>io.kotest</groupId>\n   <artifactId>kotest-assertions-core-jvm</artifactId>\n   <version>{version}</version>\n   <scope>test</scope>\n</dependency>\n"))),Object(i.b)(j,{value:"Multiplatform",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your commonTest dependencies block:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"implementation 'io.kotest:kotest-assertions-core:$version'\n")),Object(i.b)("p",null,"Alternatively, add the dependency to a specific target. For example, we could add to the Javascript target only."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),'kotlin {\n   targets {\n      js {\n         browser()\n         nodejs()\n      }\n   }\n   sourceSets {\n      val jsTest by getting {\n         dependencies {\n            implementation("io.kotest:kotest-assertions-core:$version")\n         }\n      }\n   }\n}\n')))),Object(i.b)("h2",{id:"property-testing"},"Property Testing"),Object(i.b)("p",null,"The property test framework is supported on all targets."),Object(i.b)(m,{defaultValue:"JVM/Gradle",values:[{label:"JVM/Gradle",value:"JVM/Gradle"},{label:"JVM/Maven",value:"JVM/Maven"},{label:"Multiplatform",value:"Multiplatform"}],mdxType:"Tabs"},Object(i.b)(j,{value:"JVM/Gradle",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your build:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"testImplementation 'io.kotest:kotest-property:$version'\n"))),Object(i.b)(j,{value:"JVM/Maven",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your build."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<dependency>\n   <groupId>io.kotest</groupId>\n   <artifactId>kotest-property-jvm</artifactId>\n   <version>${version}</version>\n   <scope>test</scope>\n</dependency>\n"))),Object(i.b)(j,{value:"Multiplatform",mdxType:"TabItem"},Object(i.b)("p",null,"Add the following dependency to your commonTest dependencies block:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-groovy"}),"implementation 'io.kotest:kotest-property:$version'\n")),Object(i.b)("p",null,"Alternatively, add the dependency to a specific target. For example, we could add to the Javascript target only."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),'kotlin {\n   targets {\n      js {\n         browser()\n         nodejs()\n      }\n   }\n   sourceSets {\n      val jsTest by getting {\n         dependencies {\n            implementation("io.kotest:kotest-property:$version")\n         }\n      }\n   }\n}\n')))),Object(i.b)("h2",{id:"snapshots"},"Snapshots"),Object(i.b)("p",null,"Snapshot are automatically published on each commit to master.\nIf you want to test the latest snapshot build, setup the same way described above, change the version to the current snapshot version and add the following repository to your ",Object(i.b)("inlineCode",{parentName:"p"},"repositories")," block:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"https://oss.sonatype.org/content/repositories/snapshots\n")))}h.isMDXComponent=!0},134:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return n?r.a.createElement(m,i(i({ref:t},c),{},{components:n})):r.a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},136:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},145:function(e,t,n){"use strict";var a=n(0),r=n(146);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},146:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r}}]);